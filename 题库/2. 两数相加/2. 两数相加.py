# -*- coding: utf-8 -*-
"""
Created on Tue Aug 10 15:21:41 2021

@author: 11200
"""


def addTwoNumbers(l1, l2):
    n, m = len(l1), len(l2)
    # 将2个数组弄得一样长，l记较大的长度
    if n > m:
        l = n
        l2.extend([0] * (n - m))
    else:
        l = m
        l1.extend([0] * (m - n))
    ret = []
    add = 0  # 进位
    for i in range(l):
        r = l1[i] + l2[i] + add
        add = r // 10
        r %= 10
        ret.append(r)
    if add == 1:
        ret.append(add)
    return ret


print([7, 0, 8] == addTwoNumbers(l1=[2, 4, 3], l2=[5, 6, 4]))
print([0] == addTwoNumbers(l1=[0], l2=[0]))
print([8, 9, 9, 9, 0, 0, 0, 1] == addTwoNumbers(
    l1=[9, 9, 9, 9, 9, 9, 9], l2=[9, 9, 9, 9]))

"""
2. 两数相加
给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

请你将两个数相加，并以相同形式返回一个表示和的链表。

你可以假设除了数字 0 之外，这两个数都不会以 0 开头。

 

示例 1：


输入：l1 = [2,4,3], l2 = [5,6,4]
输出：[7,0,8]
解释：342 + 465 = 807.
示例 2：

输入：l1 = [0], l2 = [0]
输出：[0]
示例 3：

输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
输出：[8,9,9,9,0,0,0,1]


提示：

每个链表中的节点数在范围 [1, 100] 内
0 <= Node.val <= 9
题目数据保证列表表示的数字不含前导零
"""
